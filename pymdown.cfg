# Select your CSS for you output html
# or you can have it all contained in your HTML template
#
# Is an array of stylesheets (path or link).
# If it points to a physical file, it will be included.
# PyMdown will look relative to the binary if it can't find the file.
#
# This can be overridden in a file's frontmatter via the 'settings' key word:
#
# ---
# settings:
#     css:
#     -   somefile.css
# ---
#
# but if you want to append to the list, you can use the 'include.css' keyword in the
# frontmatter:
#
# ---
# include.css:
# - somefile.css
# ---
#
css:
-   css/site-template.css
-   css/markdown.css
-   css/pygments-tomorrowmorning.css

# Include the pygments css when using codehilite extension
use_pygments_css: false

# Your HTML template
# PyMdown will look relative to the binary if it can't find the file.
template: _templates/site-template.html

# By default resource paths are converted to relative file paths when possible;
# this disables conversion.  Previews will still convert paths to render preview proper.
disable_path_conversion: false

# By default resource paths are converted to relative file paths when possible;
# this disables conversion.
path_conversion_absolute: false

# Load up js scripts (in head)
#
# Is an array of scripts (path or link).
# If it points to a physical file, it will be included.
# PyMdown will look relative to the binary if it can't find the file.
#
# This can be overridden in a file's frontmatter via the 'settings' key word:
#
# ---
# settings:
#     js:
#     -   somefile.js
# ---
#
# but if you want to append to the list, you can use the 'include.js' keyword in the
# frontmatter:
#
# ---
# include.js:
# - somefile.js
# ---
#
js:
-   js/jshelper.js
-   js/touch.js
-   js/nav.js

# Quick load aliases
#
# This is a quick way to optionally load multiple CSS and JS files when converting a specific file.
# It done using the file's frontmatter:
#
# ---
# include:
# - mathjax
# - flow
# ---
#
# You can create any key you want, but it needs to begin with '@'.  Then just use the include keyword
# in your frontmatter, and provide a list of aliases you wish to load.  Each alias can have a 'css' and/or 'js' keyword.
"@flow":
    js:
        -   "https://cdnjs.cloudflare.com/ajax/libs/raphael/2.1.2/raphael-min.js"
        -   js/flowchart-min.js
        -   js/uml-converter.js
        -   js/flow-loader.js

"@sequence":
    js:
        -   "https://cdnjs.cloudflare.com/ajax/libs/raphael/2.1.2/raphael-min.js"
        -   "https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.7.0/underscore-min.js"
        -   "https://cdnjs.cloudflare.com/ajax/libs/js-sequence-diagrams/1.0.4/sequence-diagram-min.js"
        -   js/uml-converter.js
        -   js/sequence-loader.js

"@mathjax":
   js:
        -   js/mathjax-config.js
        -   'https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'

# Length of tabs in source files
tab_length: 4

# Ignore number of first item in ordered list.
# Setting this to false will force the list to start with the
# first specified number in the ist.
lazy_ol: true

# Python Markdown by default enables smart logic for _connected_words_
# but only on italic with the underscore character.  I find this behavior odd
# and disable it by default for a more traditional markdown feel by default.
# Extensions can override this.
smart_emphasis: false

# Enable/disable attributes
enable_attributes: true

# Output format (html|html5|html5|xhtml|xhtml1|xhtml5)
# It is recommend to use more specific versions such as: html5 or xhtml1 than
# general html or xhtml
output_format: 'xhtml1'

# Python Markdown extensions
extensions:
    markdown.extensions.extra:
    markdown.extensions.toc:
        title: Table of Contents
        baselevel: 2
    markdown.extensions.codehilite:
        guess_lang: false
        pygments_style: tomorrowmorning
        css_class: highlight
    markdown.extensions.smarty:
    markdown.extensions.wikilinks:
    markdown.extensions.admonition:
    markdown.extensions.nl2br:
    pymdownx.magiclink:
    pymdownx.betterem:
    pymdownx.tilde:
    pymdownx.caret:
    pymdownx.mark:
    pymdownx.smartsymbols:
    pymdownx.githubemoji:
    pymdownx.tasklist:
    pymdownx.progressbar:
    pymdownx.headeranchor:
    pymdownx.superfences:
    pymdownx.inlinehilite:
        style_plain_text: true
    pymdownx.math:
    pymdownx.critic:
